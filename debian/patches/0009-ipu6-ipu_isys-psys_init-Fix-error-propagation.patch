From: Hans de Goede <hdegoede@redhat.com>
Date: Fri, 21 Oct 2022 11:59:23 +0200
Subject: ipu6: ipu_isys/psys_init(): Fix error propagation

Actually return the error of the failing function rather then returning
-ENOMEM for errors which are totally not -ENOMEM.

While at it also add logging for when things fail, so that we know what
failed. Use dev_err_probe() for this, so that -EPROBE_DEFER errors don't
get logged (but do get recorded by the kernel internally, so that they can
be used to debug why a driver is not binding).

Signed-off-by: Hans de Goede <hdegoede@redhat.com>
(cherry picked from commit 74b0ac4fa1aabcc12b7444e9fe83cb2c5a1571f9)
Signed-off-by: You-Sheng Yang (vicamo) <vicamo.yang@canonical.com>
---
 drivers/media/pci/intel/ipu.c | 32 +++++++++++++++++++++-----------
 1 file changed, 21 insertions(+), 11 deletions(-)

diff --git a/drivers/media/pci/intel/ipu.c b/drivers/media/pci/intel/ipu.c
index cf57db5..34709d4 100644
--- a/drivers/media/pci/intel/ipu.c
+++ b/drivers/media/pci/intel/ipu.c
@@ -70,12 +70,14 @@ static struct ipu_bus_device *ipu_isys_init(struct pci_dev *pdev,
 		if (fwnode && !IS_ERR_OR_NULL(fwnode->secondary)) {
 			dev_err(&pdev->dev,
 				"fwnode graph has no endpoints connection\n");
-			return ERR_PTR(-ENOMEM);
+			return ERR_PTR(-EINVAL);
 		}
 
 		ret = ipu_isys_bridge_init(pdev);
-		if (ret)
-			return ERR_PTR(-ENOMEM);
+		if (ret) {
+			dev_err_probe(&pdev->dev, ret, "ipu_isys_bridge_init() failed\n");
+			return ERR_PTR(ret);
+		}
 	}
 #endif
 
@@ -92,13 +94,17 @@ static struct ipu_bus_device *ipu_isys_init(struct pci_dev *pdev,
 
 	isys = ipu_bus_add_device(pdev, parent, pdata, ctrl,
 				  IPU_ISYS_NAME, nr);
-	if (IS_ERR(isys))
-		return ERR_PTR(-ENOMEM);
+	if (IS_ERR(isys)) {
+		dev_err_probe(&pdev->dev, PTR_ERR(isys), "ipu_bus_add_device(isys) failed\n");
+		return ERR_CAST(isys);
+	}
 
 	isys->mmu = ipu_mmu_init(&pdev->dev, base, ISYS_MMID,
 				 &ipdata->hw_variant);
-	if (IS_ERR(isys->mmu))
-		return ERR_PTR(-ENOMEM);
+	if (IS_ERR(isys->mmu)) {
+		dev_err_probe(&pdev->dev, PTR_ERR(isys), "ipu_mmu_init(isys->mmu) failed\n");
+		return ERR_CAST(isys->mmu);
+	}
 
 	isys->mmu->dev = &isys->dev;
 
@@ -124,13 +130,17 @@ static struct ipu_bus_device *ipu_psys_init(struct pci_dev *pdev,
 
 	psys = ipu_bus_add_device(pdev, parent, pdata, ctrl,
 				  IPU_PSYS_NAME, nr);
-	if (IS_ERR(psys))
-		return ERR_PTR(-ENOMEM);
+	if (IS_ERR(psys)) {
+		dev_err_probe(&pdev->dev, PTR_ERR(psys), "ipu_bus_add_device(psys) failed\n");
+		return ERR_CAST(psys);
+	}
 
 	psys->mmu = ipu_mmu_init(&pdev->dev, base, PSYS_MMID,
 				 &ipdata->hw_variant);
-	if (IS_ERR(psys->mmu))
-		return ERR_PTR(-ENOMEM);
+	if (IS_ERR(psys->mmu)) {
+		dev_err_probe(&pdev->dev, PTR_ERR(psys), "ipu_mmu_init(psys->mmu) failed\n");
+		return ERR_CAST(psys->mmu);
+	}
 
 	psys->mmu->dev = &psys->dev;
 
